[meta]
    seed = 0
    batch_size = 1
    calib_steps = 8         # The minimum value for calib_steps is 8.
    model_version = 1

[ops_test]
    class_package = "ops_test"

    [ops_test.conv2d]
    class_name = "CONV2D_TEST"
        [[ops_test.conv2d.cfg]]
        # conv2d, pointwise, aligned
        input_shape = [1, 3, 224, 224]
        export_name_prefix = "conv2d_ishap_1_3_224_224_kshap_16_3_3_3"
        export_path = ""
        in_channels = 3
        out_channels = 16
        kernel_size = [3, 3]
        stride = [2, 2]
        padding = [0, 0]
        dilation = [1, 1]
        groups = 1
        bias = true
        activation_func = "ReLU"    # "", "ReLU"

        [[ops_test.conv2d.cfg]]
        # conv2d, pointwise, aligned
        input_shape = [1, 16, 32, 32]
        export_name_prefix = "conv2d_ishap_1_16_32_32_kshap_32_16_1_1"
        export_path = ""
        in_channels = 16
        out_channels = 32
        kernel_size = [1, 1]
        stride = [1, 1]
        padding = [0, 0]
        dilation = [1, 1]
        groups = 1
        bias = true
        activation_func = ""    # "", "ReLU"

        [[ops_test.conv2d.cfg]]
        # conv2d, pointwise, aligned, two task
        input_shape = [1, 16, 120, 120]
        export_name_prefix = "conv2d_ishap_1_16_120_120_kshap_32_16_1_1"
        export_path = ""
        in_channels = 16
        out_channels = 32
        kernel_size = [1, 1]
        stride = [1, 1]
        padding = [0, 0]
        dilation = [1, 1]
        groups = 1
        bias = true
        activation_func = ""    # "", "ReLU"

        [[ops_test.conv2d.cfg]]
        # conv2d, pointwise, aligned, two task
        input_shape = [1, 16, 32, 32]
        export_name_prefix = "conv2d_ishap_1_16_32_32_kshap_32_16_5_5_relu"
        export_path = ""
        in_channels = 16
        out_channels = 32
        kernel_size = [5, 5]
        stride = [2, 2]
        padding = [2, 2]
        dilation = [1, 1]
        groups = 1
        bias = true
        activation_func = "ReLU"    # "", "ReLU"

        [[ops_test.conv2d.cfg]]
        # conv2d, pointwise, aligned, two task
        input_shape = [1, 16, 32, 32]
        export_name_prefix = "conv2d_ishap_1_16_32_32_kshap_32_16_7_7_relu"
        export_path = ""
        in_channels = 16
        out_channels = 32
        kernel_size = [7, 7]
        stride = [2, 2]
        padding = [2, 2]
        dilation = [1, 1]
        groups = 1
        bias = true
        activation_func = "ReLU"    # "", "ReLU"

        [[ops_test.conv2d.cfg]]
        # conv2d, pointwise, aligned, two task
        input_shape = [1, 48, 19, 29]
        export_name_prefix = "conv2d_ishap_1_48_19_29_kshap_16_48_3_3"
        export_path = ""
        in_channels = 48
        out_channels = 16
        kernel_size = [3, 3]
        stride = [2, 2]
        padding = [1, 1]
        dilation = [1, 1]
        groups = 1
        bias = true
        activation_func = ""    # "", "ReLU"

        [[ops_test.conv2d.cfg]]
        # conv2d, pointwise, aligned, two task
        input_shape = [1, 33, 19, 29]
        export_name_prefix = "conv2d_ishap_1_33_19_29_kshap_55_33_3_3"
        export_path = ""
        in_channels = 33
        out_channels = 55
        kernel_size = [3, 3]
        stride = [1, 1]
        padding = [1, 1]
        dilation = [1, 1]
        groups = 1
        bias = true
        activation_func = ""    # "", "ReLU"

        [[ops_test.conv2d.cfg]]
        # Can be configured as 1-d or 2-d arrays
        input_shape = [1, 16, 3, 3]
        export_name_prefix = "depthwise_conv2d_ishap_1_16_3_3_kshap_16_1_3_3_relu"
        export_path = ""
        in_channels = 16
        out_channels = 16
        kernel_size = [3, 3]
        stride = [1, 1]
        padding = [1, 1]
        dilation = [1, 1]
        groups = 16
        bias = true
        activation_func = "ReLU"    # "", "ReLU"

        [[ops_test.conv2d.cfg]]
        # Can be configured as 1-d or 2-d arrays
        input_shape = [1, 16, 20, 20]
        export_name_prefix = "depthwise_conv2d_ishap_1_16_20_20_kshap_16_1_5_5_relu"
        export_path = ""
        in_channels = 16
        out_channels = 16
        kernel_size = [5, 5]
        stride = [2, 2]
        padding = [1, 1]
        dilation = [1, 1]
        groups = 16
        bias = true
        activation_func = "ReLU"    # "", "ReLU"

        [[ops_test.conv2d.cfg]]
        # Can be configured as 1-d or 2-d arrays
        input_shape = [1, 16, 20, 20]
        export_name_prefix = "depthwise_conv2d_ishap_1_16_20_20_kshap_16_1_7_7_relu"
        export_path = ""
        in_channels = 16
        out_channels = 16
        kernel_size = [7, 7]
        stride = [1, 2]
        padding = [2, 2]
        dilation = [1, 1]
        groups = 16
        bias = true
        activation_func = "ReLU"    # "", "ReLU"

        [[ops_test.conv2d.cfg]]
        # Can be configured as 1-d or 2-d arrays
        input_shape = [1, 30, 20, 20]
        export_name_prefix = "depthwise_conv2d_ishap_1_30_20_20_kshap_30_1_7_7_relu"
        export_path = ""
        in_channels = 30
        out_channels = 30
        kernel_size = [7, 7]
        stride = [1, 2]
        padding = [2, 2]
        dilation = [1, 1]
        groups = 30
        bias = true
        activation_func = "ReLU"    # "", "ReLU"

        [[ops_test.conv2d.cfg]]
        # Can be configured as 1-d or 2-d arrays
        input_shape = [1, 32, 120, 120]
        export_name_prefix = "depthwise_conv2d_ishap_1_32_120_120_kshap_32_1_3_3_relu"
        export_path = ""
        in_channels = 32
        out_channels = 32
        kernel_size = [3, 3]
        stride = [1, 1]
        padding = [0, 0]
        dilation = [1, 1]
        groups = 32
        bias = true
        activation_func = "ReLU"    # "", "ReLU"

    [ops_test.linear]
    class_name = "LINEAR_TEST"
        [[ops_test.linear.cfg]]
        input_shape = [1, 16]
        export_name_prefix = "linear_ishap_1_16_kshap_16_16_relu"
        export_path = ""
        in_features = 16
        out_features = 16
        bias = true
        activation_func = "ReLU"    # "", "ReLU"

        [[ops_test.linear.cfg]]
        input_shape = [1, 31]
        export_name_prefix = "linear_ishap_1_31_kshap_32_31_relu"
        export_path = ""
        in_features = 31
        out_features = 32
        bias = true
        activation_func = "ReLU"    # "", "ReLU"

        [[ops_test.linear.cfg]]
        input_shape = [1, 64]
        export_name_prefix = "linear_ishap_1_64_kshap_32_64_relu"
        export_path = ""
        in_features = 64
        out_features = 32
        bias = true
        activation_func = ""    # "", "ReLU"

    [ops_test.add2d]
    class_name = "ADD2D_TEST"
        [[ops_test.add2d.cfg]]
        input_shape = [[1, 96, 5, 5], [1, 96, 5, 5]]
        export_name_prefix = "add2d_ishap_1_96_5_5"
        activation_func = ""
        [[ops_test.add2d.cfg]]
        input_shape = [[1, 5, 5, 31], [1, 1, 1, 31]]
        export_name_prefix = "add2d_ishap_1_96_1_1"
        activation_func = ""

    [ops_test.mul2d]
    class_name = "MUL2D_TEST"
        [[ops_test.mul2d.cfg]]
        input_shape = [[1, 176, 10, 10], [1, 176, 10, 10]]
        export_name_prefix = "mul2d_ishap_1_176_10_10"
        export_path = ""
        activation_func = ""
        [[ops_test.mul2d.cfg]]
        input_shape = [[1, 1, 1, 100], [1, 10, 10, 100]]
        export_name_prefix = "mul2d_ishap_1_10_10_100"
        export_path = ""
        activation_func = ""

    [ops_test.global_average_pooling]
    class_name = "GLOBAL_AVERAGE_POOLING_TEST"
        [[ops_test.global_average_pooling.cfg]]
        input_shape = [1, 96, 5, 5]
        export_name_prefix = "global_average_pooling_ishap_1_96_5_5"
        [[ops_test.global_average_pooling.cfg]]
        input_shape = [1, 51, 3, 3]
        export_name_prefix = "global_average_pooling_ishap_1_51_3_3"

    [ops_test.average_pooling]
    class_name = "AVERAGE_POOLING_TEST"
        [[ops_test.average_pooling.cfg]]
        input_shape = [1, 96, 7, 7]
        export_name_prefix = "average_pooling_ishap_1_96_7_7_kshape_2_3"
        kernel_size = [2, 3]
        stride = [1, 2]
        padding = [0, 0]

        [[ops_test.average_pooling.cfg]]
        input_shape = [1, 96, 5, 5]
        export_name_prefix = "average_pooling_ishap_1_96_5_5_kshape_2_2"
        kernel_size = [2, 2]
        stride = [2, 2]
        padding = [0, 0]

        [[ops_test.average_pooling.cfg]]
        input_shape = [1, 51, 5, 5]
        export_name_prefix = "average_pooling_ishap_1_51_5_5_kshape_3_1"
        kernel_size = [3, 1]
        stride = [1, 1]
        padding = [0, 0]

        [[ops_test.average_pooling.cfg]]
        input_shape = [1, 51, 7, 7]
        export_name_prefix = "average_pooling_ishap_1_51_7_7_kshape_2_2"
        kernel_size = [2, 2]
        stride = [1, 1]
        padding = [1, 1]

    [ops_test.max_pooling]
    class_name = "MAX_POOLING_TEST"
        [[ops_test.max_pooling.cfg]]
        input_shape = [1, 96, 7, 7]
        export_name_prefix = "max_pooling_ishap_1_96_7_7_kshape_2_3"
        kernel_size = [2, 3]
        stride = [1, 2]
        padding = [0, 0]

        [[ops_test.max_pooling.cfg]]
        input_shape = [1, 96, 5, 5]
        export_name_prefix = "max_pooling_ishap_1_96_5_5_kshape_2_2"
        kernel_size = [2, 2]
        stride = [2, 2]
        padding = [0, 0]

        [[ops_test.max_pooling.cfg]]
        input_shape = [1, 51, 5, 5]
        export_name_prefix = "max_pooling_ishap_1_51_5_5_kshape_3_1"
        kernel_size = [3, 1]
        stride = [1, 1]
        padding = [0, 0]

        [[ops_test.max_pooling.cfg]]
        input_shape = [1, 51, 7, 7]
        export_name_prefix = "max_pooling_ishap_1_51_7_7_kshape_2_2"
        kernel_size = [2, 2]
        stride = [1, 1]
        padding = [1, 1]

    [ops_test.resize2d]
    class_name = "RESIZE2D_TEST"
        [[ops_test.resize2d.cfg]]
        input_shape = [1, 96, 5, 5]
        export_name_prefix = "resize2d_ishap_1_96_5_5"
        conv = false

        [[ops_test.resize2d.cfg]]
        input_shape = [1, 16, 8, 8]
        export_name_prefix = "resize2d_conv_ishap_1_16_8_8"
        conv = true
        in_features = 16
        out_features = 16

    [ops_test.sigmoid]
    class_name = "SIGMOID_TEST"
        [[ops_test.sigmoid.cfg]]
        input_shape = [1, 96, 20, 20]
        export_name_prefix = "sigmoid_ishap_1_96_20_20"

        [[ops_test.sigmoid.cfg]]
        input_shape = [1, 30, 40]
        export_name_prefix = "sigmoid_ishap_1_30_40"

        [[ops_test.sigmoid.cfg]]
        input_shape = [1, 355]
        export_name_prefix = "sigmoid_ishap_1_355"

    [ops_test.tanh]
    class_name = "TANH_TEST"
        [[ops_test.tanh.cfg]]
        input_shape = [1, 96, 20, 20]
        export_name_prefix = "tanh_ishap_1_96_20_20"

        [[ops_test.tanh.cfg]]
        input_shape = [1, 30, 40]
        export_name_prefix = "tanh_ishap_1_30_40"

        [[ops_test.tanh.cfg]]
        input_shape = [1, 355]
        export_name_prefix = "tanh_ishap_1_355"

    [ops_test.leakyrelu]
    class_name = "LEAKYRELU_TEST"
        [[ops_test.leakyrelu.cfg]]
        input_shape = [1, 96, 20, 20]
        slope = 0.02
        export_name_prefix = "leakyrelu_ishap_1_96_20_20"

        [[ops_test.leakyrelu.cfg]]
        input_shape = [1, 30, 40]
        slope = 0.1
        export_name_prefix = "leakyrelu_ishap_1_30_40"

        [[ops_test.leakyrelu.cfg]]
        input_shape = [1, 355]
        slope = 0.25
        export_name_prefix = "leakyrelu_ishap_1_355"

    [ops_test.hardsigmoid]
    class_name = "HARDSIGMOID_TEST"
        [[ops_test.hardsigmoid.cfg]]
        input_shape = [1, 96, 20, 20]
        export_name_prefix = "hardsigmoid_ishap_1_96_20_20"

        [[ops_test.hardsigmoid.cfg]]
        input_shape = [1, 30, 40]
        export_name_prefix = "hardsigmoid_ishap_1_30_40"

        [[ops_test.hardsigmoid.cfg]]
        input_shape = [1, 355]
        export_name_prefix = "hardsigmoid_ishap_1_355"

    [ops_test.hardswish]
    class_name = "HARDSWISH_TEST"
        [[ops_test.hardswish.cfg]]
        input_shape = [1, 96, 20, 20]
        export_name_prefix = "hardswish_ishap_1_96_20_20"

    [ops_test.prelu]
    class_name = "PRELU_TEST"
        [[ops_test.prelu.cfg]]
        input_shape = [1, 20, 20, 20]
        num_parameters = 1
        export_name_prefix = "prelu_ishap_1_20_20_20_1"

    class_name = "PRELU_TEST"
        [[ops_test.prelu.cfg]]
        input_shape = [1, 96, 20, 20]
        num_parameters = 1
        export_name_prefix = "prelu_ishap_1_96_20_20_1"


    [ops_test.concat]
    class_name = "CONCAT_TEST"
        [[ops_test.concat.cfg]]
        input_shape = [[1, 80, 20, 20], [1, 48, 20, 20]]
        export_name_prefix = "concat_ishape_1_80_20_20_1_48_20_20"
        axis = 1

        [[ops_test.concat.cfg]]
        input_shape = [[1, 5, 10, 10], [1, 5, 12, 10]]
        export_name_prefix = "concat_ishape_1_5_10_10_1_5_12_10"
        axis = 2

        [[ops_test.concat.cfg]]
        input_shape = [[1, 5, 10, 10], [1, 5, 10, 31]]
        export_name_prefix = "concat_ishape_1_5_10_10_1_5_10_31"
        axis = 3

    [ops_test.clip]
    class_name = "CLIP_TEST"
        [[ops_test.clip.cfg]]
        input_shape = [1, 10, 5, 5]
        export_name_prefix = "clip_ishape_1_10_5_5_min_0_max_6"
        min = 0
        max = 6
        export_path = ""

    [ops_test.flatten]
    class_name = "FLATTEN_TEST"
        [[ops_test.flatten.cfg]]
        input_shape = [1, 10, 32, 5, 5]
        export_name_prefix = "flatten_ishape_1_10_32_5_5_start_0_end__2"
        start_dim = 0
        end_dim = -2
        export_path = ""

    [ops_test.reshape]
    class_name = "RESHAPE_TEST"
        [[ops_test.reshape.cfg]]
        input_shape = [1, 10, 32, 5, 5]
        export_name_prefix = "reshape_ishape_1_10_32_5_5_shape_320_5_5"
        shape = [320, 5, 5]
        export_path = ""

        [[ops_test.reshape.cfg]]
        input_shape = [1, 10, 32, 5, 5]
        export_name_prefix = "reshape_ishape_1_10_32_5_5_shape_1600_5"
        shape = [1600, 5]
        export_path = ""

    [ops_test.transpose]
    class_name = "TRANSPOSE_TEST"
        [[ops_test.transpose.cfg]]
        input_shape = [1, 10, 20, 40]
        export_name_prefix = "transpose_ishape_1_10_20_40_perm_0_2_1_3"
        export_path = ""
        perm = [0, 2, 1, 3]

        [[ops_test.transpose.cfg]]
        input_shape = [1, 25, 35]
        export_name_prefix = "transpose_ishape_1_25_35_perm_2_0_1"
        export_path = ""
        perm = [2, 0, 1]

        [[ops_test.transpose.cfg]]
        input_shape = [1, 33]
        export_name_prefix = "transpose_ishape_1_33_perm_1_0"
        export_path = ""
        perm = [1, 0]

    [ops_test.softmax]
    class_name = "SOFTMAX_TEST"
        [[ops_test.softmax.cfg]]
        input_shape = [1, 10, 20, 40]
        export_name_prefix = "softmax_ishape_1_10_20_40_dim_-1"
        dim = -1
        relu = true

        [[ops_test.softmax.cfg]]
        input_shape = [1, 25, 35]
        export_name_prefix = "softmax_ishape_1_25_35_dim_1"
        dim = 1
        relu = true

        [[ops_test.softmax.cfg]]
        input_shape = [1, 33]
        export_name_prefix = "softmax_ishape_1_33_dim_-1"
        dim = -1
        relu = false

    [ops_test.squeeze]
    class_name = "SQUEEZE_TEST"
        [[ops_test.squeeze.cfg]]
        input_shape = [1, 10, 1, 2, 5]
        export_name_prefix = "squeeze_ishape_1_10_1_2_5_dim_2"
        dim = 2

        [[ops_test.squeeze.cfg]]
        input_shape = [1, 10, 1, 2, 1]
        export_name_prefix = "squeeze_ishape_1_10_1_2_1_dim_-1"
        dim = -1

        [[ops_test.squeeze.cfg]]
        input_shape = [1, 2, 1, 4]
        export_name_prefix = "squeeze_ishape_1_2_1_4"
        dim = false

    [ops_test.unsqueeze]
    class_name = "UNSQUEEZE_TEST"
        [[ops_test.unsqueeze.cfg]]
        input_shape = [1, 10, 2, 5]
        export_name_prefix = "unsqueeze_ishape_1_10_2_5_dim_0"
        dim = 0

        [[ops_test.unsqueeze.cfg]]
        input_shape = [1, 10, 2, 5]
        export_name_prefix = "unsqueeze_ishape_1_10_2_5_dim_2"
        dim = 2

        [[ops_test.unsqueeze.cfg]]
        input_shape = [1, 10, 2, 5]
        export_name_prefix = "unsqueeze_ishape_1_10_2_5_dim_-1"
        dim = -1

        [[ops_test.unsqueeze.cfg]]
        input_shape = [1, 2, 4]
        export_name_prefix = "unsqueeze_ishape_1_2_4_dim_3"
        dim = 3

    class_name = "EXP_TEST"
        [[ops_test.exp.cfg]]
        input_shape = [1, 96, 20, 20]
        export_name_prefix = "exp_ishap_1_96_20_20"

        [[ops_test.exp.cfg]]
        input_shape = [1, 30, 40]
        export_name_prefix = "exp_ishap_1_30_40"

        [[ops_test.exp.cfg]]
        input_shape = [1, 355]
        export_name_prefix = "exp_ishap_1_355"

    [ops_test.log]
    class_name = "LOG_TEST"
        [[ops_test.log.cfg]]
        input_shape = [1, 96, 20, 20]
        export_name_prefix = "log_ishap_1_96_20_20"

        [[ops_test.log.cfg]]
        input_shape = [1, 30, 40]
        export_name_prefix = "log_ishap_1_30_40"

        [[ops_test.log.cfg]]
        input_shape = [1, 355]
        export_name_prefix = "log_ishap_1_355"

    [ops_test.sqrt]
    class_name = "SQRT_TEST"
        [[ops_test.sqrt.cfg]]
        input_shape = [1, 96, 20, 20]
        export_name_prefix = "sqrt_ishap_1_96_20_20"

        [[ops_test.sqrt.cfg]]
        input_shape = [1, 30, 40]
        export_name_prefix = "sqrt_ishap_1_30_40"

        [[ops_test.sqrt.cfg]]
        input_shape = [1, 355]
        export_name_prefix = "sqrt_ishap_1_355"

    [ops_test.slice]
    class_name = "SLICE_TEST"
        [[ops_test.slice.cfg]]
        input_shape = [1, 96, 20, 20]
        dim = 4
        export_name_prefix = "slice_ishap_1_96_20_20"

        [[ops_test.slice.cfg]]
        input_shape = [1, 10, 10]
        dim = 3
        export_name_prefix = "slice_ishap_1_10_10"

        [[ops_test.slice.cfg]]
        input_shape = [15, 133]
        dim = 2
        export_name_prefix = "slice_ishap_15_133"

        [[ops_test.slice.cfg]]
        input_shape = [38, 2, 2]
        dim = 1
        export_name_prefix = "slice_ishap_38"

    [ops_test.pad]
    class_name = "PAD_TEST"
    description = "only support constant mode"
        [[ops_test.pad.cfg]]
        input_shape = [64]
        pads = [3,3]
        mode = "constant"
        const_value = 1
        export_name_prefix = "pad_ishap_64_pads_3_3_constant_1"

        [[ops_test.pad.cfg]]
        input_shape = [10, 100]
        pads = [1,0,5,5]
        mode = "constant"
        const_value = 0
        export_name_prefix = "pad_ishap_10_100_pads_1_0_5_5_constant_0"

        [[ops_test.pad.cfg]]
        input_shape = [15, 133]
        pads = [11,12]
        mode = "replicate"
        const_value = 0
        export_name_prefix = "pad_ishap_15_133_pads_11_12_replicate"

        [[ops_test.pad.cfg]]
        input_shape = [9, 33]
        pads = [4,4]
        mode = "reflect"
        const_value = 0
        export_name_prefix = "pad_ishap_9_33_pads_4_4_reflect"

        [[ops_test.pad.cfg]]
        input_shape = [2, 10, 100]
        pads = [1,1,2,2]
        mode = "constant"
        const_value = 2
        export_name_prefix = "pad_ishap_2_10_100_pads_1_1_2_2_constant_2"

        [[ops_test.pad.cfg]]
        input_shape = [1, 15, 133]
        pads = [1,1,10,10]
        mode = "replicate"
        const_value = 0
        export_name_prefix = "pad_ishap_1_15_133_pads_1_1_10_10_replicate"

        [[ops_test.pad.cfg]]
        input_shape = [5, 9, 33]
        pads = [1,2,3,4]
        mode = "reflect"
        const_value = 0
        export_name_prefix = "pad_ishap_5_9_33_pads_1_2_3_4_reflect"

        [[ops_test.pad.cfg]]
        input_shape = [2, 5, 10, 50]
        pads = [2,1,1,1,1,1,2,2]
        mode = "constant"
        const_value = 1
        export_name_prefix = "pad_ishap_2_5_10_50_pads_2_1_1_1_1_1_2_2_constant_1"

        [[ops_test.pad.cfg]]
        input_shape = [2, 4, 15, 33]
        pads = [1,2,1,2,3,4]
        mode = "replicate"
        const_value = 0
        export_name_prefix = "pad_ishap_2_4_15_33_pads_1_2_1_2_3_4_replicate"

        [[ops_test.pad.cfg]]
        input_shape = [1, 5, 9, 33]
        pads = [1,2,1,2,3,4]
        mode = "reflect"
        const_value = 0
        export_name_prefix = "pad_ishap_1_5_9_33_pads_1_2_1_2_3_4_reflect"

        [[ops_test.pad.cfg]]
        input_shape = [2, 2, 5, 10, 50]
        pads = [2,1,1,2,1,2]
        mode = "reflect"
        const_value = 0
        export_name_prefix = "pad_ishap_2_2_5_10_50_pads_2_1_1_2_1_2_reflect"

        [[ops_test.pad.cfg]]
        input_shape = [2, 4, 5, 10, 20]
        pads = [1,3,1,3,3,1]
        mode = "replicate"
        const_value = 0
        export_name_prefix = "pad_ishap_2_4_5_10_20_pads_1_3_1_3_3_1_replicate"

        [[ops_test.pad.cfg]]
        input_shape = [2, 2, 5, 10, 50]
        pads = [2,1,1,1,1,1,1,1,1,1]
        mode = "constant"
        const_value = 1
        export_name_prefix = "pad_ishap_2_2_5_10_50_pads_2_1_1_1_1_1_1_1_1_1_constant_1"

[models_test]
    [models_test.picodet]
        input_shape = [1, 3, 224, 224]
        onnx_model_path = "picodet_xs_224_mod_chns_relu_rep_sim.onnx"
        export_path = ""
        export_name_prefix = "picodet_xs_224_mod_chns_relu_rep_sim"

    [models_test.mobilenet_v2]
        input_shape = [1, 3, 224, 224]
        onnx_model_path = "mobilenet_v2.onnx"
        export_path = ""
        export_name_prefix = "mobilenet_v2"
